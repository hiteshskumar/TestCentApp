@page "/inventorydashboard"

@using ChargesWFM.UI.Models;
@using ChargesWFM.UI.Components.GridComponent;
@using ChargesWFM.UI.Components.Controls;
@using ChargesWFM.UI.Services;
@inherits LayoutComponentBase
<style>
    tbody tr td:last-child {
        text-align: left !important;
    }
</style>

<ContentWrapper Header="Inventory Dashboard" IsClientVisible="false" ProjectGroupChanged="OnProjectGroupChanged"
    Level="ContentWrapper.PageAccessLevel.ProjectGroup">
    <AuthorizeView Policy="InventoryDashboardAccess">
        <Authorized Context="Auth">
            <PageHeading Title="Inventory Dashboard"></PageHeading>
            <ProgressScreen Enabled="@displayLoading" DisplayText="@progressText">
                <section class="card">
                    <div class="row mt-2">
                    <div class="col-3 pe-0">

                        <label>From Date</label>
                        <input type="date" class="autocomplete-input rounded p-2" style="margin-top:-1px !important"
                            value=item.FromDate @onchange="OnFromDateSelected" />
                    </div>
                    @* <input type="date" id="DatePicker" class="autocomplete-input rounded p-2" style="margin-top:-1px
                        !important" value="@GetDateTimeValue(field.FieldDetails.Field)" @onchange="@(args =>
                        OnDateTimeValueChanged(field.FieldDetails.Field, args.Value.ToString()))" disabled="@disable"/> *@
                    <div class="col-3 pe-0">
                        <label>To Date</label>
                        <input type="date" class="autocomplete-input rounded p-2" style="margin-top:-1px !important"
                            value=item.ToDate @onchange="OnToDateSelected" />
                    </div>
                    <div class="col-3 pe-0" hidden="@(isFosHide)">
                        <label>From Date Service</label>
                        <input type="date" class="autocomplete-input rounded p-2" style="margin-top:-1px !important"
                            value=item.FromDos @onchange="OnFromDosSelected" />
                    </div>
                    <div class="col-3 pe-0" hidden="@(isFosHide)">
                        <label>To Date Service</label>
                        <input type="date" class="autocomplete-input rounded p-2" style="margin-top:-1px !important"
                            value=item.ToDos @onchange="OnTosSelected" />
                    </div>                   
                        <div class="col-3 pe-0" hidden="@(isWorkQueueHide)">
                            <label for="ddlWorkQueue">Work Queue</label>
                            <div style="width: 150px">
                                <MultiSelectNew Id="ddlWorkQueue" Items="dsworkqueue"
                                    TextField="((item)=>item.WorkQueueValue)" ValueField="((item)=>item.WorkQueueValue)"
                                    SelectedValues="selectedWorkQueue" ValueChanged="((e)=> { selectedWorkQueue=e; })"
                                    Label="Work Queue Num"></MultiSelectNew>
                            </div>
                        </div> 
                         <div class="col-3 pe-0" hidden="@(isQueueNameHide)">
                            <label for="ddlQueueName">Queue Name</label>
                            <div style="width: 150px">
                                <MultiSelectNew Id="ddlQueueName" Items="dsQueueName"
                                    TextField="((item)=>item.MasterValue)" ValueField="((item)=>item.MasterValue)"
                                    SelectedValues="@selectedQueueName" ValueChanged="@((e)=> { selectedQueueName=e; })"
                                    Label="Queue Name"></MultiSelectNew>
                            </div>
                        </div> 
                        <div class="col-3 pe-0">
                            <button type="button" class="btn btn-success btn-sm m-t-20"
                            @onclick="@GetInventory"><i class="fa fa-long-arrow-right" aria-hidden="true"></i> Get Inventory</button>
                        </div>                 
                </div>

                <div hidden="@(isHide)">
                    <Grid TItem="Inventory" @bind-SortColumn="sortColumn" Items="@_InventoryData" AllowFiltering="true"
                        AllowSorting="true" MinimumHeight="75vh">
                        <GridColumns>
                            <GridColumn TItem="Inventory" Field="@nameof(Inventory.Coder)" Title="Coder"
                                ValueExpression="@(Item => Item.Coder)" AllowFiltering="true" AllowSorting="true">
                            </GridColumn>

                            <GridColumn TItem="Inventory" Field="@nameof(Inventory.Assignedaccounts)" Title="Assigned"
                                ValueExpression="@(Item => Item.Assignedaccounts)" AllowFiltering="true"
                                AllowSorting="true">
                            </GridColumn>

                            <GridColumn TItem="Inventory" Field="@nameof(Inventory.Coded)" Title="Completed"
                                ValueExpression="@(Item => Item.Coded)" AllowFiltering="true" AllowSorting="true">
                            </GridColumn>

                            <GridColumn TItem="Inventory" Field="@nameof(Inventory.Pended)" Title="Pended"
                                ValueExpression="@(Item => Item.Pended)" AllowFiltering="true" AllowSorting="true">
                            </GridColumn>

                            <GridColumn TItem="Inventory" Field="@nameof(Inventory.Unfetched)" Title="Backlog"
                                ValueExpression="@(Item => Item.Unfetched)" AllowFiltering="true" AllowSorting="true">
                            </GridColumn>
                        </GridColumns>
                    </Grid>
                </div>
                </section>
            </ProgressScreen>
        </Authorized>
        <NotAuthorized>
            <UnauthorizedComponent ModalDisplay="none"></UnauthorizedComponent>
        </NotAuthorized>
    </AuthorizeView>
</ContentWrapper>